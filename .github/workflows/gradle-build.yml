name: Build YTExt

on:
  push:
    branches:
      - '**'

jobs:
  generate-version:
    runs-on: ubuntu-latest
    outputs:
      app-version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Set version from date
        id: set-version
        run: echo "version=$(date +'%d.%m.%Y')" >> $GITHUB_OUTPUT

  build-macos:
    needs: generate-version
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for Gradle Build Scan

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'  # Cache Gradle dependencies

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/daemon
            ~/.gradle/native
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build macOS App
        env:
          GOOGLE_AI_STUDIO_API_KEY: ${{ secrets.GOOGLE_AI_STUDIO_API_KEY }}
          YT_APP_NAME: ${{ secrets.YT_APP_NAME }}
          YT_DATA_API_V3_KEY: ${{ secrets.YT_DATA_API_V3_KEY }}
          APP_VERSION: ${{ needs.generate-version.outputs.app-version }}
        run: |
          ./gradlew packageDmg -PreleaseBuild=true -Pversion=${{ needs.generate-version.outputs.app-version }} --build-cache --configuration-cache --parallel

      - name: Get current timestamp
        id: date
        run: echo "date=$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Upload macOS .dmg Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ytext-macos-${{ github.ref_name }}-${{ steps.date.outputs.date }}.dmg
          path: composeApp/build/compose/binaries/main/dmg/*.dmg
          retention-days: 1

  build-linux:
    needs: generate-version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/daemon
            ~/.gradle/native
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install -y fakeroot
      - name: Build Linux DEB package
        env:
          GOOGLE_AI_STUDIO_API_KEY: ${{ secrets.GOOGLE_AI_STUDIO_API_KEY }}
          YT_APP_NAME: ${{ secrets.YT_APP_NAME }}
          YT_DATA_API_V3_KEY: ${{ secrets.YT_DATA_API_V3_KEY }}
          APP_VERSION: ${{ needs.generate-version.outputs.app-version }}
        run: |
          ./gradlew packageDeb -PreleaseBuild=true -Pversion=${{ needs.generate-version.outputs.app-version }} --build-cache --configuration-cache --parallel
      - name: Get current timestamp
        id: date
        run: echo "date=$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      - name: Upload Linux .deb Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ytext-linux-${{ github.ref_name }}-${{ steps.date.outputs.date }}.deb
          path: composeApp/build/compose/binaries/main/deb/*.deb
          retention-days: 1